#well layout for data in this repository (i.e for green_all.npy and red_all.npy
#data is to be read in with LoadData, as is done at the end.

p_let = ['B','C','D','E','F','G','H','I','J','K','L','M','N','O']
p_num = ['2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23']

#proportion of parental cells
propP = np.array([[1,1,1,1,1,1,0.9,0.9,0.9,0.9,0.9,0.9,0.4,0.4,0.4,0.4,0.4,0.4,0,0,0,np.NaN],
                  [1,1,1,1,1,1,0.9,0.9,0.9,0.9,0.9,0.9,0.4,0.4,0.4,0.4,0.4,0.4,0,0,0,np.NaN],
                  [1,1,1,1,1,1,0.9,0.9,0.9,0.9,0.9,0.9,0.4,0.4,0.4,0.4,0.4,0.4,0,0,0,np.NaN],
                  [1,1,1,1,1,1,0.9,0.9,0.9,0.9,0.9,0.9,0.4,0.4,0.4,0.4,0.4,0.4,0,0,0,np.NaN],
                  [0.975,0.975,0.975,0.975,0.975,0.975,0.8,0.8,0.8,0.8,0.8,0.8,0.2,0.2,0.2,0.2,0.2,0.2,0,0,0,np.NaN],
                  [0.975,0.975,0.975,0.975,0.975,0.975,0.8,0.8,0.8,0.8,0.8,0.8,0.2,0.2,0.2,0.2,0.2,0.2,0,0,0,np.NaN],
                  [0.975,0.975,0.975,0.975,0.975,0.975,0.8,0.8,0.8,0.8,0.8,0.8,0.2,0.2,0.2,0.2,0.2,0.2,0,0,0,np.NaN],
                  [0.975,0.975,0.975,0.975,0.975,0.975,0.8,0.8,0.8,0.8,0.8,0.8,0.2,0.2,0.2,0.2,0.2,0.2,0,0,0,np.NaN],
                  [0.95,0.95,0.95,0.95,0.95,0.95,0.6,0.6,0.6,0.6,0.6,0.6,0.1,0.1,0.1,0.1,0.1,0.1,np.NaN,np.NaN,np.NaN,np.NaN],
                  [0.95,0.95,0.95,0.95,0.95,0.95,0.6,0.6,0.6,0.6,0.6,0.6,0.1,0.1,0.1,0.1,0.1,0.1,np.NaN,np.NaN,np.NaN,np.NaN],
                  [0.95,0.95,0.95,0.95,0.95,0.95,0.6,0.6,0.6,0.6,0.6,0.6,0.1,0.1,0.1,0.1,0.1,0.1,0.025,0.025,0.025,np.NaN],
                  [0.95,0.95,0.95,0.95,0.95,0.95,0.6,0.6,0.6,0.6,0.6,0.6,0.1,0.1,0.1,0.1,0.1,0.1,0.025,0.025,0.025,np.NaN],
                  [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.025,0.025,0.025,0.025,0.025,0.025,0.025,0.025,0.025,np.NaN],
                  [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.025,0.025,0.025,0.025,0.025,0.025,0.025,0.025,0.025,np.NaN]])

#is drug present (1) or not (0)?
drugV = np.array([[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0],
                  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1],
                  [0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1],
                  [0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1]
                 ])

#co-cultured with (1) or without (0) fibroblasts?
fibroV = np.array([[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
                   [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
                   [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
                   [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
                   [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
                   [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
                   [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1],
                   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
                   [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                  ])

#use this function to load processed data from files
import numpy as np

def LoadPlate(rootDir):
    red_all = np.load(rootDir + '/Processed/red_all.npy')
    green_all = np.load(rootDir + '/Processed/green_all.npy')
    time_all = np.load(rootDir + '/Processed/time_all.npy')
    
    return red_all, green_all, time_all

rlanp_t, glanp_t, time_all = LoadPlate('..')
